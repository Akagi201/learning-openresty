#worker_processes  1;

error_log logs/error.log warn;
pid logs/nginx.pid;

events {
  worker_connections 256;
}
http {
  server_tokens off; # 隐藏版本号
  more_set_headers 'Server: OpenResty Scaffold by Akagi201';
  send_timeout 10s;
  keepalive_disable none; # 对所有请求均强制长连接, 关闭动作强制由客户端发起.
  client_body_buffer_size 128k;

  lua_package_path "$prefix/lib/?.lua;$prefix/lib/?.luac;;";
  lua_package_cpath "$prefix/lib/?.so;;";

  lua_shared_dict ngx_cache 1m;

  # 美元符
  geo $dollar {
    default "$";
  }

  server {
    root "";
    listen 2016;

    access_log off; # logs/access.log;

    lua_code_cache off;

    # 变量插值
    location /test {
      set $foo hello;
      echo "foo: $foo";
    }

    location /test1 {
      echo "This is a dollar sign: $dollar";
    }

    location /test2 {
      set $first "hello ";
      echo "${first}world";
    }

    location /foo {
      echo "foo = [$foo]";
    }

    location /bar {
      set $foo 32;
      echo "foo = [$foo]";
    }

    # 内部跳转
    location /foo1 {
      set $a hello;
      echo_exec /bar1;
    }

    location /bar1 {
      echo "a = [$a]";
    }

    # rewrite
    location /foo2 {
      set $a hello;
      rewrite ^ /bar2;
    }

    location /bar2 {
      echo "a = [$a]";
    }

    # 内建变量
    location /test3 {
      echo "uri = $uri";
      echo "request_uri = $request_uri";
    }

    # $arg_XXX 变量群
    location /test4 {
      echo "name: $arg_name";
      echo "class: $arg_class";
    }

    # 对 URI 参数值中的 %XX 这样的编码序列进行解码
    location /test5 {
      set_unescape_uri $name $arg_name;
      set_unescape_uri $class $arg_class;

      echo "name: $name";
      echo "class: $class";
    }

    # 一些内建变量是支持改写的, 如$args
    location /test6 {
      set $orig_args $args;
      set $args "a=3&b=4";

      echo "original args: $orig_args";
      echo "args: $args";
    }

    location /test7 {
      set $orig_a $arg_a;
      set $args "a=5";
      echo "original a: $orig_a";
      echo "a: $arg_a";
    }

  }
  #lua_socket_log_errors off;
}
